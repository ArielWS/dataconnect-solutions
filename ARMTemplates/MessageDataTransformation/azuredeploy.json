{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    },
    "variables": {
        "synapseStorageExternalId": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.Storage/storageAccounts/')]",
        "storageAccountName": "[concat('mgdcsynapse', uniqueString(resourceGroup().id))]",
        "WorkspaceName": "[concat('mgdcwsp', uniqueString(resourceGroup().id))]",
        "sqlServer_name": "[concat('mysqlserver', uniqueString(resourceGroup().id))]",
        "sqlserverAdminPassword": "[concat('P', uniqueString(resourceGroup().id, '224F5A8B-51DB-46A3-A7C8-59B0DD584A41'), 'x', '!')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "westeurope",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": true,
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2021-06-01",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces",
            "apiVersion": "2021-06-01",
            "name": "[variables('WorkspaceName')]",
            "location": "westeurope",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "defaultDataLakeStorage": {
                    "resourceId": "[concat(variables('synapseStorageExternalId'), variables('storageAccountName'))]",
                    "accountUrl": "[concat('https://', variables('storageAccountName'), '.dfs.core.windows.net')]",
                    "filesystem": "[concat(variables('WorkspaceName'), 'fs')]"
                },
                "encryption": {},
                "connectivityEndpoints": {
                    "web": "[concat('https://web.azuresynapse.net?workspace=%2fsubscriptions%2f', subscription().subscriptionId,'%2fresourceGroups%2f',resourceGroup().id,'%2fproviders%2fMicrosoft.Synapse%2fworkspaces%2f', variables('WorkspaceName'))]",
                    "dev": "[concat('https://', variables('WorkspaceName'), '.dev.azuresynapse.net')]",
                    "sqlOnDemand": "[concat(variables('WorkspaceName'), '-ondemand.sql.azuresynapse.net')]",
                    "sql": "[concat(variables('WorkspaceName'), '.sql.azuresynapse.net')]"
                },
                "managedResourceGroupName": "[concat('synapseworkspace-managedrg-', uniqueString(resourceGroup().id))]",
                "sqlAdministratorLogin": "sqladminuser",
                "privateEndpointConnections": [],
                "publicNetworkAccess": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
            ]
        },
        {
            "type": "Microsoft.Synapse/workspaces/auditingSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(variables('WorkspaceName'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', variables('WorkspaceName'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/bigDataPools",
            "apiVersion": "2021-06-01",
            "name": "[concat(variables('WorkspaceName'), '/MGDCSParkPool')]",
            "location": "westeurope",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', variables('WorkspaceName'))]"
            ],
            "properties": {
                "creationDate": "2021-12-15T13:50:11.03Z",
                "sparkVersion": "3.1",
                "nodeCount": 0,
                "nodeSize": "Medium",
                "nodeSizeFamily": "MemoryOptimized",
                "autoScale": {
                    "enabled": true,
                    "minNodeCount": 3,
                    "maxNodeCount": 10
                },
                "autoPause": {
                    "enabled": true,
                    "delayInMinutes": 15
                },
                "isComputeIsolationEnabled": false,
                "sessionLevelPackagesEnabled": true,
                "cacheSize": 0,
                "dynamicExecutorAllocation": {
                    "enabled": false
                },
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/extendedAuditingSettings",
            "apiVersion": "2021-06-01",
            "name": "[concat(variables('WorkspaceName'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', variables('WorkspaceName'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/firewallRules",
            "apiVersion": "2021-06-01",
            "name": "[concat(variables('WorkspaceName'), '/allowAll')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', variables('WorkspaceName'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "255.255.255.255"
            }
        },
        {
            "type": "Microsoft.Synapse/workspaces/integrationruntimes",
            "apiVersion": "2021-06-01",
            "name": "[concat(variables('WorkspaceName'), '/AutoResolveIntegrationRuntime')]",
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces', variables('WorkspaceName'))]"
            ],
            "properties": {
                "type": "Managed",
                "typeProperties": {
                    "computeProperties": {
                        "location": "AutoResolve"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2021-11-01-preview",
            "name": "[variables('sqlServer_name')]",
            "location": "eastus",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "azureuser",
                "administratorLoginPassword": "[variables('sqlserverAdminPassword')]",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "restrictOutboundNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/advancedThreatProtectionSettings",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(variables('sqlServer_name'), '/Default')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/auditingSettings",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/connectionPolicies",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/default')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "connectionType": "Default"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/mySampleDatabase')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "sku": {
                "name": "GP_S_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 1
            },
            "kind": "v12.0,user,vcore,serverless",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 34359738368,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "autoPauseDelay": 60,
                "requestedBackupStorageRedundancy": "Geo",
                "minCapacity": 0.5,
                "maintenanceConfigurationId": "/subscriptions/30a81c99-6121-40ba-99d7-ac674961cd7e/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default",
                "isLedgerOn": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(variables('sqlServer_name'), '/master/Default')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(variables('sqlServer_name'), '/master/Default')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/devOpsAuditingSettings",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged",
                "autoRotationEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/extendedAuditingSettings",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/ClientIp-2022-9-2_7-26-19')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/keys",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/ServiceManaged')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyType": "ServiceManaged"
            }
        },
        
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(variables('sqlServer_name'), '/mySampleDatabase/Default')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServer_name'), 'mySampleDatabase')]",
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/mySampleDatabase/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServer_name'), 'mySampleDatabase')]",
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/mySampleDatabase/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServer_name'), 'mySampleDatabase')]",
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "retentionDays": 7,
                "diffBackupIntervalInHours": 12
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/mySampleDatabase/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServer_name'), 'mySampleDatabase')]",
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(variables('sqlServer_name'), '/mySampleDatabase/Default')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServer_name'), 'mySampleDatabase')]",
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/mySampleDatabase/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServer_name'), 'mySampleDatabase')]",
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/mySampleDatabase/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServer_name'), 'mySampleDatabase')]",
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2021-11-01-preview",
            "name": "[concat(variables('sqlServer_name'), '/mySampleDatabase/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlServer_name'), 'mySampleDatabase')]",
                "[resourceId('Microsoft.Sql/servers', variables('sqlServer_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        }
    ]
}
